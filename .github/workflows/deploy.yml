name: Deploy to S3

on:
    push:
        branches:
            - main
            - develop

jobs:
    deploy:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '20'

            - name: Create .env file for production
              if: github.ref == 'refs/heads/main'
              run: |
                  echo "VITE_GOOGLE_MAPS_API_KEY=${{ secrets.VITE_GOOGLE_MAPS_API_KEY }}" >> .env
                  echo "VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}" >> .env
                  echo "VITE_WEBSOCKET_URL=${{ secrets.VITE_WEBSOCKET_URL }}" >> .env

            - name: Create .env file for staging
              if: github.ref == 'refs/heads/develop'
              run: |
                  echo "VITE_GOOGLE_MAPS_API_KEY=${{ secrets.VITE_GOOGLE_MAPS_API_KEY }}" >> .env
                  echo "VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}" >> .env
                  echo "VITE_WEBSOCKET_URL=${{ secrets.VITE_WEBSOCKET_URL }}" >> .env

            - name: Cache dependencies
              uses: actions/cache@v3
              with:
                  path: node_modules
                  key: ${{ runner.os }}-nm-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-nm-

            - name: Install dependencies
              run: yarn install --frozen-lockfile

            - name: Run linting
              run: yarn lint

            - name: Type checking
              run: yarn tsc --noEmit

            - name: Build
              run: yarn build

            - name: Run Cypress testing (E2E)
              run: yarn cy

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ secrets.AWS_REGION }}

            - name: Deploy to production (S3)
              if: github.ref == 'refs/heads/main'
              run: |
                  aws s3 sync dist/ s3://${{ secrets.S3_BUCKET_NAME }} --delete

            - name: Deploy to staging
              if: github.ref == 'refs/heads/develop'
              run: |
                  aws s3 sync dist/ s3://${{ secrets.S3_BUCKET_NAME }}/staging/ --delete
